apply plugin: 'com.android.application'

// region KeyStore Properties
// Create a variable called keystorePropertiesFile, and initialize it to the
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Loads the keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
// endregion

android {

    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        applicationId "com.mobymagic.bakingapp"

        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion

        versionCode rootProject.versionCode
        versionName rootProject.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    /*dexOptions {
        javaMaxHeapSize "4g"
    }*/

    productFlavors {
        // Define separate dev and prod product flavors.
        dev {
            // dev utilizes minSDKVersion = 21 to allow the Android gradle plugin
            // to pre-dex each module and produce an APK that can be tested on
            // Android Lollipop without time consuming dex merging processes.
            minSdkVersion 21
        }
        prod {
            // The actual minSdkVersion for the application.
            minSdkVersion rootProject.minSdkVersion
        }
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['RELEASE_KEY_ALIAS']
            keyPassword keystoreProperties['RELEASE_KEY_PASSWORD']
            storeFile file(keystoreProperties['RELEASE_STORE_FILE'])
            storePassword keystoreProperties['RELEASE_STORE_PASSWORD']
        }
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            debuggable true
        }
    }

    compileOptions {
        sourceCompatibility rootProject.sourceCompatibility
        targetCompatibility rootProject.targetCompatibility
    }

    dataBinding {
        enabled = true
    }

}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')

    // Support Dependencies
    compile "com.android.support:appcompat-v7:${rootProject.supportLibVersion}"
    compile "com.android.support:design:${rootProject.supportLibVersion}"
    compile "com.android.support:recyclerview-v7:${rootProject.supportLibVersion}"
    compile "com.android.support:cardview-v7:${rootProject.supportLibVersion}"
    compile "com.android.support.constraint:constraint-layout:${rootProject.constraintLayoutVersion}"
    androidTestCompile "com.android.support:support-annotations:${rootProject.supportLibVersion}"

    // Square/Jake Wharton Dependencies
    compile "com.squareup.retrofit2:retrofit:${rootProject.retrofitVersion}"
    compile "com.squareup.retrofit2:adapter-rxjava2:${rootProject.retrofitVersion}"
    compile "com.squareup.retrofit2:converter-gson:${rootProject.retrofitVersion}"
    compile "com.jakewharton.timber:timber:${rootProject.timberVersion}"

    // Gson
    compile "com.google.code.gson:gson:${rootProject.gsonVersion}"

    // Reactive stuff
    compile "io.reactivex.rxjava2:rxjava:${rootProject.rxJavaVersion}"
    compile "io.reactivex.rxjava2:rxandroid:${rootProject.rxAndroidVersion}"

    // The almighty glide
    compile "com.github.bumptech.glide:glide:${rootProject.glideVersion}"

    // Views
    compile "de.hdodenhof:circleimageview:${rootProject.circleImageViewVersion}"

    // ExoPlayer
    compile "com.google.android.exoplayer:exoplayer:${rootProject.exoPlayerVersion}"

    // Test Dependencies
    androidTestCompile("com.android.support.test.espresso:espresso-core:${rootProject.expressoVersion}", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    compile "com.android.support.test.espresso:espresso-idling-resource:${rootProject.expressoVersion}"
    androidTestCompile "com.android.support.test.espresso:espresso-core:${rootProject.expressoVersion}"
    androidTestCompile "com.android.support.test.espresso:espresso-intents:${rootProject.expressoVersion}"
    androidTestCompile "com.android.support.test:rules:${rootProject.testRulesVersion}"
    androidTestCompile "com.android.support.test:runner:${rootProject.testRunnerVersion}"
    androidTestCompile("com.android.support.test.espresso:espresso-contrib:${rootProject.expressoVersion}") {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'design'
        exclude module: 'recyclerview-v7'
    }

    testCompile "junit:junit:${rootProject.junitVersion}"
}
